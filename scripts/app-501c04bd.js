"use strict";angular.module("stank",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngResource","ngRoute","ngMaterial","pouchdb","stank.game"]).config(["$routeProvider",function(t){t.when("/",{templateUrl:"app/main/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("stank").controller("NavbarCtrl",["$scope",function(t){t.date=new Date}]),angular.module("stank.game",[]).directive("gameCanvas",["$injector",function(){var t=function(t){console.log("linkFn"),t.game=new Phaser.Game(t.width,t.height,Phaser.AUTO,"game-canvas"),console.log("game engine create"),t.onInit({game:t.game})};return{scope:{onInit:"&",width:"=",height:"="},restrict:"E",template:'<div id="game-canvas" style="height: 100vh;overflow: hidden"></div>',link:t}}]);var Tank=function(){function t(){}return t}();angular.module("stank").factory("TankGame",function(){function t(t){function m(){t.input.onDown.remove(m,this),e.kill()}function g(){console.log("PHASER: preload"),t.load.atlas("tank","assets/tanks/tanks.png","assets/tanks/tanks.json"),t.load.atlas("enemy","assets/tanks/enemy-tanks.png","assets/tanks/tanks.json"),t.load.image("logo","assets/tanks/logo.png"),t.load.image("bullet","assets/tanks/bullet.png"),t.load.image("earth","assets/tanks/scorched_earth.png"),t.load.spritesheet("kaboom","assets/tanks/explosion.png",64,64,23)}function p(t,e){var a=20;l=20;for(var i=0;a>i;i++){var s=new c(t,e,n);s.name="enemy_"+i,d.push(s)}}function k(){console.log("PHASER: create"),t.scale.scaleMode=Phaser.ScaleManager.SHOW_ALL,t.scale.pageAlignHorizontally=!0,t.scale.pageAlignVertically=!0,t.world.setBounds(-1e3,-1e3,2e3,2e3),i=t.add.tileSprite(0,0,800,600,"earth"),i.fixedToCamera=!0,n=t.add.group(),n.enableBody=!0,n.physicsBodyType=Phaser.Physics.ARCADE,n.createMultiple(100,"bullet"),n.setAll("anchor.x",.5),n.setAll("anchor.y",.5),n.setAll("outOfBoundsKill",!0),n.setAll("checkWorldBounds",!0),a=t.add.group(),a.enableBody=!0,a.physicsBodyType=Phaser.Physics.ARCADE,a.createMultiple(30,"bullet",0,!1),a.setAll("anchor.x",.5),a.setAll("anchor.y",.5),a.setAll("outOfBoundsKill",!0),a.setAll("checkWorldBounds",!0),o=t.add.group();for(var h=0;10>h;h++){var l=o.create(0,0,"kaboom",[0],!1);l.anchor.setTo(.5,.5),l.animations.add("kaboom")}s=new u(t),p(t,s.tank),e=t.add.sprite(0,200,"logo"),e.fixedToCamera=!0,t.input.onDown.add(m,this),t.camera.follow(s.tank),t.camera.deadzone=new Phaser.Rectangle(150,150,500,300),t.camera.focusOnXY(0,0),r=t.input.keyboard.createCursorKeys()}function y(){l=0;for(var e=0;e<d.length;e++)d[e].alive&&(l++,t.physics.arcade.collide(s.tank,d[e].tank),t.physics.arcade.overlap(a,d[e].tank,d[e].bulletHitEnemy,null,d[e]),d[e].update());r.left.isDown?s.tank.angle-=4:r.right.isDown&&(s.tank.angle+=4),r.up.isDown?s.currentSpeed=300:s.currentSpeed>0&&(s.currentSpeed-=4),s.currentSpeed>0&&t.physics.arcade.velocityFromRotation(s.tank.rotation,s.currentSpeed,s.tank.body.velocity),i.tilePosition.x=-t.camera.x,i.tilePosition.y=-t.camera.y,s.update(),t.input.activePointer.isDown&&s.fire()}return h=t,{preload:g,create:k,update:y,render:function(){t.debug.text("Enemies: "+l+" / "+d.length,32,32)}}}var e,a,n,i,s,o,r,h,l=0,d=[],c=function(t,e,a){this.x=t.world.randomX,this.y=t.world.randomY,this.game=t,this.player=e,this.bullets=a,this.health=3,this.fireRate=1e3,this.nextFire=0,this.alive=!0,this.shadow=t.add.sprite(this.x,this.y,"enemy","shadow"),this.tank=t.add.sprite(this.x,this.y,"enemy","tank1"),this.turret=t.add.sprite(this.x,this.y,"enemy","turret"),this.shadow.anchor.set(.5),this.tank.anchor.set(.5),this.tank.name=this.name,this.turret.anchor.set(.3,.5),t.physics.enable(this.tank,Phaser.Physics.ARCADE),this.tank.body.immovable=!1,this.tank.body.collideWorldBounds=!0,this.tank.body.bounce.setTo(1,1),this.tank.angle=t.rnd.angle(),t.physics.arcade.velocityFromRotation(this.tank.rotation,100,this.tank.body.velocity)};c.prototype.damage=function(){return this.health-=1,this.health<=0?(this.alive=!1,this.shadow.kill(),this.tank.kill(),this.turret.kill(),!0):!1},c.prototype.update=function(){if(this.x=this.tank.x,this.y=this.tank.y,this.shadow.x=this.tank.x,this.shadow.y=this.tank.y,this.shadow.rotation=this.tank.rotation,this.turret.x=this.tank.x,this.turret.y=this.tank.y,this.turret.rotation=this.game.physics.arcade.angleBetween(this.tank,this.player),this.game.physics.arcade.distanceBetween(this.tank,this.player)<300&&this.game.time.now>this.nextFire&&this.bullets.countDead()>0){this.nextFire=this.game.time.now+this.fireRate;var t=this.bullets.getFirstDead();t.reset(this.turret.x,this.turret.y),t.rotation=this.game.physics.arcade.moveToObject(t,this.player,500)}},c.prototype.bulletHitEnemy=function(t,e){e.kill();var a=this.damage();if(a){var n=o.getFirstExists(!1);n.reset(this.tank.x,this.tank.y),n.play("kaboom",30,!1,!0)}};var u=function(t){this.game=t,this.tank=t.add.sprite(0,0,"tank","tank1"),this.tank.anchor.setTo(.5,.5),this.tank.animations.add("move",["tank1","tank2","tank3","tank4","tank5","tank6"],20,!0),t.physics.enable(this.tank,Phaser.Physics.ARCADE),this.tank.body.drag.set(.2),this.tank.body.maxVelocity.setTo(400,400),this.tank.body.collideWorldBounds=!0,this.turret=t.add.sprite(0,0,"tank","turret"),this.turret.anchor.setTo(.3,.5),this.shadow=t.add.sprite(0,0,"tank","shadow"),this.shadow.anchor.setTo(.5,.5),this.tank.bringToTop(),this.turret.bringToTop(),this.nextFire=0,this.fireRate=1e3,this.currentSpeed=0};return u.prototype.update=function(){this.game.physics.arcade.overlap(n,this.tank,this.bulletHitPlayer,null,this),this.shadow.x=this.tank.x,this.shadow.y=this.tank.y,this.shadow.rotation=this.tank.rotation,this.turret.x=this.tank.x,this.turret.y=this.tank.y,this.turret.rotation=this.game.physics.arcade.angleToPointer(this.turret)},u.prototype.bulletHitPlayer=function(t,e){e.kill()},u.prototype.fire=function(){if(this.game.time.now>this.nextFire&&a.countDead()>0){this.nextFire=this.game.time.now+this.fireRate;var t=a.getFirstExists(!1);t.reset(this.turret.x,this.turret.y),t.rotation=this.game.physics.arcade.moveToPointer(t,500,this.game.input.activePointer,0)}},{init:t,enemies:d,addEnemy:function(t){var e=new c(h,s.tank,n);angular.extend(e,t),d.push(e)}}}),angular.module("stank").controller("MainCtrl",["$scope","$log","pouchDB","TankGame","$interval",function(t,e,a,n,i){t.enemies=n.enemies,t.game_init=function(e){t.game=e,t.game.state.add("main",n.init(e)),t.game.state.start("main",!0,!0)},i(function(){t.enemies=n.enemies},1e3)}]),angular.module("stank").run(["$templateCache",function(t){t.put("app/main/main.html",'<game-canvas on-init="game_init(game)" id="game-view" width="800" height="600"></game-canvas>'),t.put("app/components/navbar/navbar.html",'<md-toolbar layout="row" layout-align="center center" ng-controller="NavbarCtrl"><md-button>Tank</md-button><section flex="" layout="row" layout-align="left center"><md-button href="#" class="md-raised">Home</md-button><md-button href="#" class="md-raised">About</md-button><md-button href="#" class="md-raised">Contact</md-button></section><md-button href="#">Current date: {{ date | date:\'yyyy-MM-dd\' }}</md-button></md-toolbar>')}]);