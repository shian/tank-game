"use strict";angular.module("stank",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngResource","ngRoute","ngMaterial","pouchdb"]).config(["$routeProvider",function(t){t.when("/",{templateUrl:"app/main/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("stank").controller("NavbarCtrl",["$scope",function(t){t.date=new Date}]);var __extends=this.__extends||function(t,e){function a(){this.constructor=t}for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);a.prototype=e.prototype,t.prototype=new a},TankGame;!function(t){var e,a;!function(t){function a(){n=e.add.group();for(var t=0;10>t;t++){var a=n.create(0,0,"kaboom",[0],!1);a.anchor.setTo(.5,.5),a.animations.add("kaboom")}}function i(t,e){var a=n.getFirstExists(!1);a.reset(t,e),a.play("kaboom",30,!1,!0)}var n;t.init=a,t.start=i}(a||(a={}));var i;!function(t){function a(t){o=e.add.group(),o.enableBody=!0,o.physicsBodyType=Phaser.Physics.ARCADE,o.createMultiple(t,"bullet",0,!1),o.setAll("anchor.x",.5),o.setAll("anchor.y",.5),o.setAll("outOfBoundsKill",!0),o.setAll("checkWorldBounds",!0)}function i(t,a,i){e.physics.arcade.overlap(o,t,a,null,i)}function n(t,a,i){var n=o.getFirstDead();n.reset(t,a),n.rotation=e.physics.arcade.moveToObject(n,i,500)}function s(){return o.countDead()}var o;t.init=a,t.testHit=i,t.fire=n,t.countDead=s}(i||(i={}));var n;!function(t){function a(t){o=e.add.group(),o.enableBody=!0,o.physicsBodyType=Phaser.Physics.ARCADE,o.createMultiple(t,"bullet",0,!1),o.setAll("anchor.x",.5),o.setAll("anchor.y",.5),o.setAll("outOfBoundsKill",!0),o.setAll("checkWorldBounds",!0)}function i(t,a,i){e.physics.arcade.overlap(o,t,a,null,i)}function n(t,a,i){var n=o.getFirstExists(!1);n.reset(t,a),n.rotation=e.physics.arcade.moveToPointer(n,500,i,0)}function s(){return o.countDead()}var o;t.init=a,t.testHit=i,t.fire=n,t.countDead=s}(n||(n={}));var s=function(){function t(t){this.health=3,this.fireRate=1e3,this.nextFire=0,this.alive=!0,this.player=t,this.x=e.world.randomX,this.y=e.world.randomY,this.shadow=e.add.sprite(this.x,this.y,"enemy","shadow"),this.tank=e.add.sprite(this.x,this.y,"enemy","tank1"),this.turret=e.add.sprite(this.x,this.y,"enemy","turret"),this.shadow.anchor.set(.5),this.tank.anchor.set(.5),this.turret.anchor.set(.3,.5),e.physics.enable(this.tank,Phaser.Physics.ARCADE),this.tank.body.immovable=!1,this.tank.body.collideWorldBounds=!0,this.tank.body.bounce.setTo(1,1),this.tank.angle=e.rnd.angle(),e.physics.arcade.velocityFromRotation(this.tank.rotation,100,this.tank.body.velocity)}return t.prototype.damage=function(){return this.health-=1,this.health<=0?(this.alive=!1,this.shadow.kill(),this.tank.kill(),this.turret.kill(),!0):!1},t.prototype.update=function(){this.x=this.tank.x,this.y=this.tank.y,this.shadow.x=this.tank.x,this.shadow.y=this.tank.y,this.shadow.rotation=this.tank.rotation,this.turret.x=this.tank.x,this.turret.y=this.tank.y,this.turret.rotation=e.physics.arcade.angleBetween(this.tank,this.player),e.physics.arcade.distanceBetween(this.tank,this.player)<300&&e.time.now>this.nextFire&&i.countDead()>0&&(this.nextFire=e.time.now+this.fireRate,i.fire(this.turret.x,this.turret.y,this.player))},t.prototype.bulletHitEnemy=function(t,e){e.kill();var i=this.damage();i&&a.start(this.tank.x,this.tank.y)},t}(),o=function(){function t(){this.nextFire=0,this.fireRate=1e3,this.currentSpeed=0,this.tank=e.add.sprite(0,0,"tank","tank1"),this.tank.anchor.setTo(.5,.5),this.tank.animations.add("move",["tank1","tank2","tank3","tank4","tank5","tank6"],20,!0),e.physics.enable(this.tank,Phaser.Physics.ARCADE),this.tank.body.drag.set(.2),this.tank.body.maxVelocity.setTo(400,400),this.tank.body.collideWorldBounds=!0,this.turret=e.add.sprite(0,0,"tank","turret"),this.turret.anchor.setTo(.3,.5),this.shadow=e.add.sprite(0,0,"tank","shadow"),this.shadow.anchor.setTo(.5,.5),this.tank.bringToTop(),this.turret.bringToTop()}return t.prototype.update=function(){i.testHit(this.tank,this.bulletHitPlayer,this),this.shadow.x=this.tank.x,this.shadow.y=this.tank.y,this.shadow.rotation=this.tank.rotation,this.turret.x=this.tank.x,this.turret.y=this.tank.y,this.turret.rotation=e.physics.arcade.angleToPointer(this.turret)},t.prototype.bulletHitPlayer=function(t,e){e.kill()},t.prototype.fire=function(){e.time.now>this.nextFire&&n.countDead()>0&&(this.nextFire=e.time.now+this.fireRate,n.fire(this.turret.x,this.turret.y,e.input.activePointer))},t}(),r=function(t){function r(){t.apply(this,arguments),this.enemies=[]}return __extends(r,t),r.prototype.removeLogo=function(){this.game.input.onDown.remove(this.removeLogo,this),this.logo.kill()},r.prototype.initEnemy=function(t){var e=20;this.enemiesAlive=20;for(var a=0;e>a;a++){var i=new s(t);this.enemies.push(i)}},r.prototype.preload=function(){console.log("PHASER: preload"),e.load.atlas("tank","assets/tanks/tanks.png","assets/tanks/tanks.json"),e.load.atlas("enemy","assets/tanks/enemy-tanks.png","assets/tanks/tanks.json"),e.load.image("logo","assets/tanks/logo.png"),e.load.image("bullet","assets/tanks/bullet.png"),e.load.image("earth","assets/tanks/scorched_earth.png"),e.load.spritesheet("kaboom","assets/tanks/explosion.png",64,64,23)},r.prototype.create=function(){console.log("PHASER: create"),e.scale.scaleMode=Phaser.ScaleManager.SHOW_ALL,e.scale.pageAlignHorizontally=!0,e.scale.pageAlignVertically=!0,e.world.setBounds(-1e3,-1e3,2e3,2e3),this.land=e.add.tileSprite(0,0,800,600,"earth"),this.land.fixedToCamera=!0,n.init(30),i.init(100),a.init(),this.player=new o,this.initEnemy(this.player.tank),this.logo=e.add.sprite(0,200,"logo"),this.logo.fixedToCamera=!0,e.input.onDown.add(this.removeLogo,this),e.camera.follow(this.player.tank),e.camera.deadzone=new Phaser.Rectangle(150,150,500,300),e.camera.focusOnXY(0,0),this.cursors=e.input.keyboard.createCursorKeys()},r.prototype.update=function(){this.enemiesAlive=0;for(var t=0;t<this.enemies.length;t++)this.enemies[t].alive&&(this.enemiesAlive++,e.physics.arcade.collide(this.player.tank,this.enemies[t].tank),n.testHit(this.enemies[t].tank,this.enemies[t].bulletHitEnemy,this.enemies[t]),this.enemies[t].update());this.cursors.left.isDown?this.player.tank.angle-=4:this.cursors.right.isDown&&(this.player.tank.angle+=4),this.cursors.up.isDown?this.player.currentSpeed=300:this.player.currentSpeed>0&&(this.player.currentSpeed-=4),this.player.currentSpeed>0&&this.game.physics.arcade.velocityFromRotation(this.player.tank.rotation,this.player.currentSpeed,this.player.tank.body.velocity),this.land.tilePosition.x=-this.game.camera.x,this.land.tilePosition.y=-this.game.camera.y,this.player.update(),e.input.activePointer.isDown&&this.player.fire()},r.prototype.render=function(){e.debug.text("Enemies: "+this.enemiesAlive+" / "+this.enemies.length,32,32)},r}(Phaser.State),h=function(t){function a(a){t.call(this,800,600,Phaser.AUTO,a),e=this,this.state.add("main",new r)}return __extends(a,t),a}(Phaser.Game);t.Game=h}(TankGame||(TankGame={})),angular.module("stank").factory("TankGame",function(){return TankGame.Game}),angular.module("stank").controller("MainCtrl",["$scope","TankGame",function(t,e){t.game=new e("game-view"),t.game.state.start("main",!0,!0)}]),angular.module("stank").run(["$templateCache",function(t){t.put("app/main/main.html",'<div id="game-view" style="height: 100vh;overflow: hidden"></div>'),t.put("app/components/navbar/navbar.html",'<md-toolbar layout="row" layout-align="center center" ng-controller="NavbarCtrl"><md-button>Tank</md-button><section flex="" layout="row" layout-align="left center"><md-button href="#" class="md-raised">Home</md-button><md-button href="#" class="md-raised">About</md-button><md-button href="#" class="md-raised">Contact</md-button></section><md-button href="#">Current date: {{ date | date:\'yyyy-MM-dd\' }}</md-button></md-toolbar>')}]);